import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, g as globals, e as element, t as text, m as space, c as claim_element, b as children, f as claim_text, h as detach_dev, p as claim_space, q as attr_dev, j as add_location, k as insert_hydration_dev, l as append_hydration_dev, r as set_input_value, u as listen_dev, w as prevent_default, n as noop, x as run_all } from './client.55904bd6.js';

/* src\routes\Input_Suborganization.svelte generated by Svelte v3.49.0 */

const { console: console_1 } = globals;
const file = "src\\routes\\Input_Suborganization.svelte";

function create_fragment(ctx) {
	let div0;
	let nav;
	let ol;
	let li0;
	let a0;
	let t0;
	let t1;
	let li1;
	let a1;
	let t2;
	let t3;
	let li2;
	let t4;
	let li3;
	let t5;
	let t6;
	let div4;
	let form;
	let div1;
	let label0;
	let t7;
	let t8;
	let input0;
	let t9;
	let div2;
	let label1;
	let t10;
	let t11;
	let input1;
	let t12;
	let div3;
	let label2;
	let t13;
	let t14;
	let input2;
	let t15;
	let input3;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div0 = element("div");
			nav = element("nav");
			ol = element("ol");
			li0 = element("li");
			a0 = element("a");
			t0 = text("Home");
			t1 = space();
			li1 = element("li");
			a1 = element("a");
			t2 = text("Subs Organisasi");
			t3 = space();
			li2 = element("li");
			t4 = space();
			li3 = element("li");
			t5 = text("Input Subs Organisasi");
			t6 = space();
			div4 = element("div");
			form = element("form");
			div1 = element("div");
			label0 = element("label");
			t7 = text("Nama");
			t8 = space();
			input0 = element("input");
			t9 = space();
			div2 = element("div");
			label1 = element("label");
			t10 = text("Deskripsi");
			t11 = space();
			input1 = element("input");
			t12 = space();
			div3 = element("div");
			label2 = element("label");
			t13 = text("Alamat");
			t14 = space();
			input2 = element("input");
			t15 = space();
			input3 = element("input");
			this.h();
		},
		l: function claim(nodes) {
			div0 = claim_element(nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			nav = claim_element(div0_nodes, "NAV", { "aria-label": true });
			var nav_nodes = children(nav);
			ol = claim_element(nav_nodes, "OL", { class: true });
			var ol_nodes = children(ol);
			li0 = claim_element(ol_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			a0 = claim_element(li0_nodes, "A", { href: true });
			var a0_nodes = children(a0);
			t0 = claim_text(a0_nodes, "Home");
			a0_nodes.forEach(detach_dev);
			li0_nodes.forEach(detach_dev);
			t1 = claim_space(ol_nodes);
			li1 = claim_element(ol_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			a1 = claim_element(li1_nodes, "A", { href: true });
			var a1_nodes = children(a1);
			t2 = claim_text(a1_nodes, "Subs Organisasi");
			a1_nodes.forEach(detach_dev);
			li1_nodes.forEach(detach_dev);
			t3 = claim_space(ol_nodes);
			li2 = claim_element(ol_nodes, "LI", { class: true });
			children(li2).forEach(detach_dev);
			t4 = claim_space(ol_nodes);
			li3 = claim_element(ol_nodes, "LI", { class: true, "aria-current": true });
			var li3_nodes = children(li3);
			t5 = claim_text(li3_nodes, "Input Subs Organisasi");
			li3_nodes.forEach(detach_dev);
			ol_nodes.forEach(detach_dev);
			nav_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t6 = claim_space(nodes);
			div4 = claim_element(nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			form = claim_element(div4_nodes, "FORM", {});
			var form_nodes = children(form);
			div1 = claim_element(form_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			label0 = claim_element(div1_nodes, "LABEL", { for: true });
			var label0_nodes = children(label0);
			t7 = claim_text(label0_nodes, "Nama");
			label0_nodes.forEach(detach_dev);
			t8 = claim_space(div1_nodes);
			input0 = claim_element(div1_nodes, "INPUT", { type: true, class: true, id: true });
			div1_nodes.forEach(detach_dev);
			t9 = claim_space(form_nodes);
			div2 = claim_element(form_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			label1 = claim_element(div2_nodes, "LABEL", { for: true });
			var label1_nodes = children(label1);
			t10 = claim_text(label1_nodes, "Deskripsi");
			label1_nodes.forEach(detach_dev);
			t11 = claim_space(div2_nodes);
			input1 = claim_element(div2_nodes, "INPUT", { type: true, class: true, id: true });
			div2_nodes.forEach(detach_dev);
			t12 = claim_space(form_nodes);
			div3 = claim_element(form_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			label2 = claim_element(div3_nodes, "LABEL", { for: true });
			var label2_nodes = children(label2);
			t13 = claim_text(label2_nodes, "Alamat");
			label2_nodes.forEach(detach_dev);
			t14 = claim_space(div3_nodes);
			input2 = claim_element(div3_nodes, "INPUT", { type: true, class: true, id: true });
			div3_nodes.forEach(detach_dev);
			t15 = claim_space(form_nodes);
			input3 = claim_element(form_nodes, "INPUT", { type: true, class: true });
			form_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(a0, "href", "/");
			add_location(a0, file, 43, 34, 1121);
			attr_dev(li0, "class", "breadcrumb-item");
			add_location(li0, file, 43, 6, 1093);
			attr_dev(a1, "href", "/Suborganisasi");
			add_location(a1, file, 45, 8, 1192);
			attr_dev(li1, "class", "breadcrumb-item");
			add_location(li1, file, 44, 6, 1154);
			attr_dev(li2, "class", "breadcrumb-item");
			add_location(li2, file, 47, 6, 1257);
			attr_dev(li3, "class", "breadcrumb-item active");
			attr_dev(li3, "aria-current", "page");
			add_location(li3, file, 48, 6, 1295);
			attr_dev(ol, "class", "breadcrumb");
			add_location(ol, file, 42, 4, 1062);
			attr_dev(nav, "aria-label", "breadcrumb");
			add_location(nav, file, 41, 2, 1027);
			attr_dev(div0, "class", "row");
			add_location(div0, file, 40, 0, 1006);
			attr_dev(label0, "for", "username");
			add_location(label0, file, 57, 6, 1536);
			attr_dev(input0, "type", "text");
			attr_dev(input0, "class", "form-control");
			attr_dev(input0, "id", "username");
			add_location(input0, file, 58, 6, 1578);
			attr_dev(div1, "class", "form-group first");
			add_location(div1, file, 56, 4, 1498);
			attr_dev(label1, "for", "username");
			add_location(label1, file, 61, 6, 1702);
			attr_dev(input1, "type", "text");
			attr_dev(input1, "class", "form-control");
			attr_dev(input1, "id", "username");
			add_location(input1, file, 62, 6, 1749);
			attr_dev(div2, "class", "form-group");
			add_location(div2, file, 60, 4, 1670);
			attr_dev(label2, "for", "password");
			add_location(label2, file, 70, 6, 1931);
			attr_dev(input2, "type", "password");
			attr_dev(input2, "class", "form-control");
			attr_dev(input2, "id", "password");
			add_location(input2, file, 71, 6, 1975);
			attr_dev(div3, "class", "form-group last mb-4");
			add_location(div3, file, 69, 4, 1889);
			attr_dev(input3, "type", "submit");
			input3.value = "Simpan";
			attr_dev(input3, "class", "btn btn-block btn-primary");
			add_location(input3, file, 79, 4, 2118);
			add_location(form, file, 55, 2, 1452);
			attr_dev(div4, "class", "container");
			add_location(div4, file, 54, 0, 1425);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div0, anchor);
			append_hydration_dev(div0, nav);
			append_hydration_dev(nav, ol);
			append_hydration_dev(ol, li0);
			append_hydration_dev(li0, a0);
			append_hydration_dev(a0, t0);
			append_hydration_dev(ol, t1);
			append_hydration_dev(ol, li1);
			append_hydration_dev(li1, a1);
			append_hydration_dev(a1, t2);
			append_hydration_dev(ol, t3);
			append_hydration_dev(ol, li2);
			append_hydration_dev(ol, t4);
			append_hydration_dev(ol, li3);
			append_hydration_dev(li3, t5);
			insert_hydration_dev(target, t6, anchor);
			insert_hydration_dev(target, div4, anchor);
			append_hydration_dev(div4, form);
			append_hydration_dev(form, div1);
			append_hydration_dev(div1, label0);
			append_hydration_dev(label0, t7);
			append_hydration_dev(div1, t8);
			append_hydration_dev(div1, input0);
			set_input_value(input0, /*nama*/ ctx[0]);
			append_hydration_dev(form, t9);
			append_hydration_dev(form, div2);
			append_hydration_dev(div2, label1);
			append_hydration_dev(label1, t10);
			append_hydration_dev(div2, t11);
			append_hydration_dev(div2, input1);
			set_input_value(input1, /*deskripsi*/ ctx[1]);
			append_hydration_dev(form, t12);
			append_hydration_dev(form, div3);
			append_hydration_dev(div3, label2);
			append_hydration_dev(label2, t13);
			append_hydration_dev(div3, t14);
			append_hydration_dev(div3, input2);
			set_input_value(input2, /*alamat*/ ctx[2]);
			append_hydration_dev(form, t15);
			append_hydration_dev(form, input3);

			if (!mounted) {
				dispose = [
					listen_dev(input0, "input", /*input0_input_handler*/ ctx[4]),
					listen_dev(input1, "input", /*input1_input_handler*/ ctx[5]),
					listen_dev(input2, "input", /*input2_input_handler*/ ctx[6]),
					listen_dev(form, "submit", prevent_default(/*submit*/ ctx[3]), false, true, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*nama*/ 1 && input0.value !== /*nama*/ ctx[0]) {
				set_input_value(input0, /*nama*/ ctx[0]);
			}

			if (dirty & /*deskripsi*/ 2 && input1.value !== /*deskripsi*/ ctx[1]) {
				set_input_value(input1, /*deskripsi*/ ctx[1]);
			}

			if (dirty & /*alamat*/ 4 && input2.value !== /*alamat*/ ctx[2]) {
				set_input_value(input2, /*alamat*/ ctx[2]);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div0);
			if (detaching) detach_dev(t6);
			if (detaching) detach_dev(div4);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Input_Suborganization', slots, []);
	let nama = "", deskripsi = "", alamat = "";

	const submit = async () => {
		var details = { nama, deskripsi, alamat };
		var formBody = [];

		for (var property in details) {
			var encodedKey = encodeURIComponent(property);
			var encodedValue = encodeURIComponent(details[property]);
			formBody.push(encodedKey + "=" + encodedValue);
		}

		formBody = formBody.join("&");

		await fetch("http://localhost:4000/api/online-course/registrations", {
			method: "POST",
			headers: {
				Accept: "application/json",
				"Content-Type": "application/x-www-form-urlencoded"
			},
			body: formBody
		}).then(response => response.json()).then(async responseJson => {
			if (responseJson.metadata.http_code == "201") {
				alert("berhasil Ditambahkan");
			}
		}).catch(error => {
			console.error(error);
		});
	};

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(`<Input_Suborganization> was created with unknown prop '${key}'`);
	});

	function input0_input_handler() {
		nama = this.value;
		$$invalidate(0, nama);
	}

	function input1_input_handler() {
		deskripsi = this.value;
		$$invalidate(1, deskripsi);
	}

	function input2_input_handler() {
		alamat = this.value;
		$$invalidate(2, alamat);
	}

	$$self.$capture_state = () => ({ nama, deskripsi, alamat, submit });

	$$self.$inject_state = $$props => {
		if ('nama' in $$props) $$invalidate(0, nama = $$props.nama);
		if ('deskripsi' in $$props) $$invalidate(1, deskripsi = $$props.deskripsi);
		if ('alamat' in $$props) $$invalidate(2, alamat = $$props.alamat);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		nama,
		deskripsi,
		alamat,
		submit,
		input0_input_handler,
		input1_input_handler,
		input2_input_handler
	];
}

class Input_Suborganization extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Input_Suborganization",
			options,
			id: create_fragment.name
		});
	}
}

export default Input_Suborganization;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW5wdXRfU3Vib3JnYW5pemF0aW9uLmM0ZmVhOTY1LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL0lucHV0X1N1Ym9yZ2FuaXphdGlvbi5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cclxuICBsZXQgbmFtYSA9IFwiXCIsXHJcbiAgICBkZXNrcmlwc2kgPSBcIlwiLFxyXG4gICAgYWxhbWF0ID0gXCJcIjtcclxuXHJcbiAgY29uc3Qgc3VibWl0ID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgdmFyIGRldGFpbHMgPSB7XHJcbiAgICAgIG5hbWEsXHJcbiAgICAgIGRlc2tyaXBzaSxcclxuICAgICAgYWxhbWF0LFxyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgZm9ybUJvZHkgPSBbXTtcclxuICAgIGZvciAodmFyIHByb3BlcnR5IGluIGRldGFpbHMpIHtcclxuICAgICAgdmFyIGVuY29kZWRLZXkgPSBlbmNvZGVVUklDb21wb25lbnQocHJvcGVydHkpO1xyXG4gICAgICB2YXIgZW5jb2RlZFZhbHVlID0gZW5jb2RlVVJJQ29tcG9uZW50KGRldGFpbHNbcHJvcGVydHldKTtcclxuICAgICAgZm9ybUJvZHkucHVzaChlbmNvZGVkS2V5ICsgXCI9XCIgKyBlbmNvZGVkVmFsdWUpO1xyXG4gICAgfVxyXG4gICAgZm9ybUJvZHkgPSBmb3JtQm9keS5qb2luKFwiJlwiKTtcclxuXHJcbiAgICBhd2FpdCBmZXRjaChcImh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9hcGkvb25saW5lLWNvdXJzZS9yZWdpc3RyYXRpb25zXCIsIHtcclxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIEFjY2VwdDogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIixcclxuICAgICAgfSxcclxuICAgICAgYm9keTogZm9ybUJvZHksXHJcbiAgICB9KVxyXG4gICAgICAudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLmpzb24oKSlcclxuICAgICAgLnRoZW4oYXN5bmMgKHJlc3BvbnNlSnNvbikgPT4ge1xyXG4gICAgICAgIGlmIChyZXNwb25zZUpzb24ubWV0YWRhdGEuaHR0cF9jb2RlID09IFwiMjAxXCIpIHtcclxuICAgICAgICAgIGFsZXJ0KFwiYmVyaGFzaWwgRGl0YW1iYWhrYW5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XHJcbiAgICAgIH0pO1xyXG4gIH07XHJcbjwvc2NyaXB0PlxyXG5cclxuPGRpdiBjbGFzcz1cInJvd1wiPlxyXG4gIDxuYXYgYXJpYS1sYWJlbD1cImJyZWFkY3J1bWJcIj5cclxuICAgIDxvbCBjbGFzcz1cImJyZWFkY3J1bWJcIj5cclxuICAgICAgPGxpIGNsYXNzPVwiYnJlYWRjcnVtYi1pdGVtXCI+PGEgaHJlZj1cIi9cIj5Ib21lPC9hPjwvbGk+XHJcbiAgICAgIDxsaSBjbGFzcz1cImJyZWFkY3J1bWItaXRlbVwiPlxyXG4gICAgICAgIDxhIGhyZWY9XCIvU3Vib3JnYW5pc2FzaVwiPlN1YnMgT3JnYW5pc2FzaTwvYT5cclxuICAgICAgPC9saT5cclxuICAgICAgPGxpIGNsYXNzPVwiYnJlYWRjcnVtYi1pdGVtXCIgLz5cclxuICAgICAgPGxpIGNsYXNzPVwiYnJlYWRjcnVtYi1pdGVtIGFjdGl2ZVwiIGFyaWEtY3VycmVudD1cInBhZ2VcIj5cclxuICAgICAgICBJbnB1dCBTdWJzIE9yZ2FuaXNhc2lcclxuICAgICAgPC9saT5cclxuICAgIDwvb2w+XHJcbiAgPC9uYXY+XHJcbjwvZGl2PlxyXG48ZGl2IGNsYXNzPVwiY29udGFpbmVyXCI+XHJcbiAgPGZvcm0gb246c3VibWl0fHByZXZlbnREZWZhdWx0PXtzdWJtaXR9PlxyXG4gICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgZmlyc3RcIj5cclxuICAgICAgPGxhYmVsIGZvcj1cInVzZXJuYW1lXCI+TmFtYTwvbGFiZWw+XHJcbiAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiZm9ybS1jb250cm9sXCIgaWQ9XCJ1c2VybmFtZVwiIGJpbmQ6dmFsdWU9e25hbWF9IC8+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCI+XHJcbiAgICAgIDxsYWJlbCBmb3I9XCJ1c2VybmFtZVwiPkRlc2tyaXBzaTwvbGFiZWw+XHJcbiAgICAgIDxpbnB1dFxyXG4gICAgICAgIHR5cGU9XCJ0ZXh0XCJcclxuICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbFwiXHJcbiAgICAgICAgaWQ9XCJ1c2VybmFtZVwiXHJcbiAgICAgICAgYmluZDp2YWx1ZT17ZGVza3JpcHNpfVxyXG4gICAgICAvPlxyXG4gICAgPC9kaXY+XHJcbiAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cCBsYXN0IG1iLTRcIj5cclxuICAgICAgPGxhYmVsIGZvcj1cInBhc3N3b3JkXCI+QWxhbWF0PC9sYWJlbD5cclxuICAgICAgPGlucHV0XHJcbiAgICAgICAgdHlwZT1cInBhc3N3b3JkXCJcclxuICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbFwiXHJcbiAgICAgICAgaWQ9XCJwYXNzd29yZFwiXHJcbiAgICAgICAgYmluZDp2YWx1ZT17YWxhbWF0fVxyXG4gICAgICAvPlxyXG4gICAgPC9kaXY+XHJcblxyXG4gICAgPGlucHV0IHR5cGU9XCJzdWJtaXRcIiB2YWx1ZT1cIlNpbXBhblwiIGNsYXNzPVwiYnRuIGJ0bi1ibG9jayBidG4tcHJpbWFyeVwiIC8+XHJcbiAgPC9mb3JtPlxyXG48L2Rpdj5cclxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7YUEyQzhDLE1BQUk7Ozs7YUFFakIsaUJBQWU7Ozs7O2FBR2EsdUJBRXZEOzs7Ozs7YUFPc0IsTUFBSTs7Ozs7O2NBSUosV0FBUzs7Ozs7O2NBU1QsUUFBTTs7Ozs7Ozs7Ozs7Ozs7Ozs7OzZCQTNCWSxNQUFJOzs7Ozs7Ozs2QkFFakIsaUJBQWU7Ozs7Ozs7Ozs4QkFHYSx1QkFFdkQ7Ozs7Ozs7Ozs7Ozs7O2lDQU9zQixNQUFJOzs7Ozs7Ozs7O2tDQUlKLFdBQVM7Ozs7Ozs7Ozs7a0NBU1QsUUFBTTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQTlCbEMsb0JBYU07R0FaSixvQkFXTTtHQVZKLG9CQVNLO0dBUkgsb0JBQXFEO0dBQXpCLG9CQUFvQjs7O0dBQ2hELG9CQUVLO0dBREgsb0JBQTRDOzs7R0FFOUMsb0JBQThCOztHQUM5QixvQkFFSzs7O0dBSVgsb0JBMkJNO0dBMUJKLG9CQXlCTztHQXhCTCxvQkFHTTtHQUZKLG9CQUFrQzs7O0dBQ2xDLG9CQUEwRTtvQ0FBUixHQUFJOztHQUV4RSxvQkFRTTtHQVBKLG9CQUF1Qzs7O0dBQ3ZDLG9CQUtFO3lDQURZLEdBQVM7O0dBR3pCLG9CQVFNO0dBUEosb0JBQW9DOzs7R0FDcEMsb0JBS0U7c0NBRFksR0FBTTs7R0FJdEIsb0JBQXdFOzs7Ozs7OzJEQXhCMUMsR0FBTTs7Ozs7Ozt1REFHZ0MsR0FBSTtxQ0FBSixHQUFJOzs7aUVBUXhELEdBQVM7MENBQVQsR0FBUzs7OzJEQVNULEdBQU07dUNBQU4sR0FBTTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQTFFcEIsSUFBSSxHQUFHLEVBQUUsRUFDWCxTQUFTLEdBQUcsRUFBRSxFQUNkLE1BQU0sR0FBRyxFQUFFOztPQUVQLE1BQU07TUFDTixPQUFPLEtBQ1QsSUFBSSxFQUNKLFNBQVMsRUFDVCxNQUFNO01BR0osUUFBUTs7V0FDSCxRQUFRLElBQUksT0FBTztPQUN0QixVQUFVLEdBQUcsa0JBQWtCLENBQUMsUUFBUTtPQUN4QyxZQUFZLEdBQUcsa0JBQWtCLENBQUMsT0FBTyxDQUFDLFFBQVE7R0FDdEQsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLEdBQUcsR0FBRyxHQUFHLFlBQVk7OztFQUUvQyxRQUFRLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHOztRQUV0QixLQUFLLENBQUMsdURBQXVEO0dBQ2pFLE1BQU0sRUFBRSxNQUFNO0dBQ2QsT0FBTztJQUNMLE1BQU0sRUFBRSxrQkFBa0I7SUFDMUIsY0FBYyxFQUFFLG1DQUFtQzs7R0FFckQsSUFBSSxFQUFFLFFBQVE7S0FFYixJQUFJLENBQUUsUUFBUSxJQUFLLFFBQVEsQ0FBQyxJQUFJLElBQ2hDLElBQUksT0FBUSxZQUFZO09BQ25CLFlBQVksQ0FBQyxRQUFRLENBQUMsU0FBUyxJQUFJLEtBQUs7SUFDMUMsS0FBSyxDQUFDLHNCQUFzQjs7S0FHL0IsS0FBSyxDQUFFLEtBQUs7R0FDWCxPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUs7Ozs7Ozs7Ozs7O0VBdUI2QyxJQUFJOzs7OztFQVF4RCxTQUFTOzs7OztFQVNULE1BQU07Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
