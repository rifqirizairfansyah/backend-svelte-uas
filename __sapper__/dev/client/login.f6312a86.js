import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, z as goto, a as authenticated, g as globals, e as element, m as space, t as text, c as claim_element, b as children, h as detach_dev, p as claim_space, f as claim_text, A as src_url_equal, q as attr_dev, j as add_location, B as set_style, k as insert_hydration_dev, l as append_hydration_dev, r as set_input_value, u as listen_dev, w as prevent_default, n as noop, x as run_all } from './client.55904bd6.js';

/* src\routes\login.svelte generated by Svelte v3.49.0 */

const { console: console_1 } = globals;
const file = "src\\routes\\login.svelte";

function create_fragment(ctx) {
	let div9;
	let div8;
	let div7;
	let div0;
	let img;
	let img_src_value;
	let t0;
	let div6;
	let div5;
	let div4;
	let div1;
	let h3;
	let t1;
	let t2;
	let p;
	let t3;
	let t4;
	let form;
	let div2;
	let label0;
	let t5;
	let t6;
	let input0;
	let t7;
	let div3;
	let label1;
	let t8;
	let t9;
	let input1;
	let t10;
	let input2;
	let t11;
	let span;
	let t12;
	let a;
	let t13;
	let t14;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div9 = element("div");
			div8 = element("div");
			div7 = element("div");
			div0 = element("div");
			img = element("img");
			t0 = space();
			div6 = element("div");
			div5 = element("div");
			div4 = element("div");
			div1 = element("div");
			h3 = element("h3");
			t1 = text("Sign In");
			t2 = space();
			p = element("p");
			t3 = text("Lorem ipsum dolor sit amet elit. Sapiente sit aut eos\n                consectetur adipisicing.");
			t4 = space();
			form = element("form");
			div2 = element("div");
			label0 = element("label");
			t5 = text("Email");
			t6 = space();
			input0 = element("input");
			t7 = space();
			div3 = element("div");
			label1 = element("label");
			t8 = text("Password");
			t9 = space();
			input1 = element("input");
			t10 = space();
			input2 = element("input");
			t11 = space();
			span = element("span");
			t12 = text("— Belum Punya Akun? ");
			a = element("a");
			t13 = text("Registrasi");
			t14 = text(" —");
			this.h();
		},
		l: function claim(nodes) {
			div9 = claim_element(nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			div0 = claim_element(div7_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { src: true, alt: true, class: true });
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(div7_nodes);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div1 = claim_element(div4_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			h3 = claim_element(div1_nodes, "H3", {});
			var h3_nodes = children(h3);
			t1 = claim_text(h3_nodes, "Sign In");
			h3_nodes.forEach(detach_dev);
			t2 = claim_space(div1_nodes);
			p = claim_element(div1_nodes, "P", { class: true });
			var p_nodes = children(p);
			t3 = claim_text(p_nodes, "Lorem ipsum dolor sit amet elit. Sapiente sit aut eos\n                consectetur adipisicing.");
			p_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t4 = claim_space(div4_nodes);
			form = claim_element(div4_nodes, "FORM", {});
			var form_nodes = children(form);
			div2 = claim_element(form_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			label0 = claim_element(div2_nodes, "LABEL", { for: true });
			var label0_nodes = children(label0);
			t5 = claim_text(label0_nodes, "Email");
			label0_nodes.forEach(detach_dev);
			t6 = claim_space(div2_nodes);
			input0 = claim_element(div2_nodes, "INPUT", { type: true, class: true, id: true });
			div2_nodes.forEach(detach_dev);
			t7 = claim_space(form_nodes);
			div3 = claim_element(form_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			label1 = claim_element(div3_nodes, "LABEL", { for: true });
			var label1_nodes = children(label1);
			t8 = claim_text(label1_nodes, "Password");
			label1_nodes.forEach(detach_dev);
			t9 = claim_space(div3_nodes);
			input1 = claim_element(div3_nodes, "INPUT", { type: true, class: true, id: true });
			div3_nodes.forEach(detach_dev);
			t10 = claim_space(form_nodes);
			input2 = claim_element(form_nodes, "INPUT", { type: true, class: true });
			t11 = claim_space(form_nodes);
			span = claim_element(form_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			t12 = claim_text(span_nodes, "— Belum Punya Akun? ");
			a = claim_element(span_nodes, "A", { href: true, style: true });
			var a_nodes = children(a);
			t13 = claim_text(a_nodes, "Registrasi");
			a_nodes.forEach(detach_dev);
			t14 = claim_text(span_nodes, " —");
			span_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (!src_url_equal(img.src, img_src_value = "undraw_remotely_2j6y.svg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "Avatar");
			attr_dev(img, "class", "img-fluid");
			add_location(img, file, 48, 8, 1253);
			attr_dev(div0, "class", "col-md-6");
			add_location(div0, file, 47, 6, 1222);
			add_location(h3, file, 54, 14, 1501);
			attr_dev(p, "class", "mb-4");
			add_location(p, file, 55, 14, 1532);
			attr_dev(div1, "class", "mb-4");
			add_location(div1, file, 53, 12, 1468);
			attr_dev(label0, "for", "username");
			add_location(label0, file, 62, 16, 1812);
			attr_dev(input0, "type", "text");
			attr_dev(input0, "class", "form-control");
			attr_dev(input0, "id", "username");
			add_location(input0, file, 63, 16, 1864);
			attr_dev(div2, "class", "form-group first");
			add_location(div2, file, 61, 14, 1765);
			attr_dev(label1, "for", "password");
			add_location(label1, file, 71, 16, 2114);
			attr_dev(input1, "type", "password");
			attr_dev(input1, "class", "form-control");
			attr_dev(input1, "id", "password");
			add_location(input1, file, 72, 16, 2169);
			attr_dev(div3, "class", "form-group last mb-4");
			add_location(div3, file, 70, 14, 2063);
			attr_dev(input2, "type", "submit");
			input2.value = "Log In";
			attr_dev(input2, "class", "btn btn-block btn-primary");
			add_location(input2, file, 80, 14, 2376);
			attr_dev(a, "href", "/register");
			set_style(a, "text-decoration", "none");
			add_location(a, file, 87, 43, 2629);
			attr_dev(span, "class", "d-block text-left my-4 text-muted text-center");
			add_location(span, file, 86, 14, 2526);
			add_location(form, file, 60, 12, 1710);
			attr_dev(div4, "class", "col-md-8");
			add_location(div4, file, 52, 10, 1433);
			attr_dev(div5, "class", "row justify-content-center");
			add_location(div5, file, 51, 8, 1382);
			attr_dev(div6, "class", "col-md-6 contents");
			add_location(div6, file, 50, 6, 1342);
			attr_dev(div7, "class", "row");
			add_location(div7, file, 46, 4, 1198);
			attr_dev(div8, "class", "container");
			add_location(div8, file, 45, 2, 1170);
			attr_dev(div9, "class", "content");
			add_location(div9, file, 44, 0, 1146);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, div9, anchor);
			append_hydration_dev(div9, div8);
			append_hydration_dev(div8, div7);
			append_hydration_dev(div7, div0);
			append_hydration_dev(div0, img);
			append_hydration_dev(div7, t0);
			append_hydration_dev(div7, div6);
			append_hydration_dev(div6, div5);
			append_hydration_dev(div5, div4);
			append_hydration_dev(div4, div1);
			append_hydration_dev(div1, h3);
			append_hydration_dev(h3, t1);
			append_hydration_dev(div1, t2);
			append_hydration_dev(div1, p);
			append_hydration_dev(p, t3);
			append_hydration_dev(div4, t4);
			append_hydration_dev(div4, form);
			append_hydration_dev(form, div2);
			append_hydration_dev(div2, label0);
			append_hydration_dev(label0, t5);
			append_hydration_dev(div2, t6);
			append_hydration_dev(div2, input0);
			set_input_value(input0, /*email*/ ctx[0]);
			append_hydration_dev(form, t7);
			append_hydration_dev(form, div3);
			append_hydration_dev(div3, label1);
			append_hydration_dev(label1, t8);
			append_hydration_dev(div3, t9);
			append_hydration_dev(div3, input1);
			set_input_value(input1, /*password*/ ctx[1]);
			append_hydration_dev(form, t10);
			append_hydration_dev(form, input2);
			append_hydration_dev(form, t11);
			append_hydration_dev(form, span);
			append_hydration_dev(span, t12);
			append_hydration_dev(span, a);
			append_hydration_dev(a, t13);
			append_hydration_dev(span, t14);

			if (!mounted) {
				dispose = [
					listen_dev(input0, "input", /*input0_input_handler*/ ctx[3]),
					listen_dev(input1, "input", /*input1_input_handler*/ ctx[4]),
					listen_dev(form, "submit", prevent_default(/*submit*/ ctx[2]), false, true, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*email*/ 1 && input0.value !== /*email*/ ctx[0]) {
				set_input_value(input0, /*email*/ ctx[0]);
			}

			if (dirty & /*password*/ 2 && input1.value !== /*password*/ ctx[1]) {
				set_input_value(input1, /*password*/ ctx[1]);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div9);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Login', slots, []);
	let email = "", password = "";

	const submit = async () => {
		var details = { email, password };
		var formBody = [];

		for (var property in details) {
			var encodedKey = encodeURIComponent(property);
			var encodedValue = encodeURIComponent(details[property]);
			formBody.push(encodedKey + "=" + encodedValue);
		}

		formBody = formBody.join("&");

		await fetch("http://localhost:4000/api/manajemen_organisasi/sessions/login", {
			method: "POST",
			headers: {
				Accept: "application/json",
				"Content-Type": "application/x-www-form-urlencoded"
			},
			body: formBody
		}).then(response => response.json()).then(async responseJson => {
			if (responseJson.metadata.http_code == "200") {
				authenticated.set(responseJson.data.access_token);
				await goto("/");
			} else {
				alert("email atau password salah");
			}
		}).catch(error => {
			console.error(error);
		});
	};

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(`<Login> was created with unknown prop '${key}'`);
	});

	function input0_input_handler() {
		email = this.value;
		$$invalidate(0, email);
	}

	function input1_input_handler() {
		password = this.value;
		$$invalidate(1, password);
	}

	$$self.$capture_state = () => ({
		goto,
		authenticated,
		email,
		password,
		submit
	});

	$$self.$inject_state = $$props => {
		if ('email' in $$props) $$invalidate(0, email = $$props.email);
		if ('password' in $$props) $$invalidate(1, password = $$props.password);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [email, password, submit, input0_input_handler, input1_input_handler];
}

class Login extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Login",
			options,
			id: create_fragment.name
		});
	}
}

export default Login;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4uZjYzMTJhODYuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvbG9naW4uc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gIGltcG9ydCB7IGdvdG8gfSBmcm9tIFwiQHNhcHBlci9hcHAubWpzXCI7XG4gIGltcG9ydCB7IGF1dGhlbnRpY2F0ZWQgfSBmcm9tIFwiLi4vc3RvcmVzL2F1dGhcIjtcblxuICBsZXQgZW1haWwgPSBcIlwiLFxuICAgIHBhc3N3b3JkID0gXCJcIjtcblxuICBjb25zdCBzdWJtaXQgPSBhc3luYyAoKSA9PiB7XG4gICAgdmFyIGRldGFpbHMgPSB7XG4gICAgICBlbWFpbCxcbiAgICAgIHBhc3N3b3JkLFxuICAgIH07XG5cbiAgICB2YXIgZm9ybUJvZHkgPSBbXTtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiBkZXRhaWxzKSB7XG4gICAgICB2YXIgZW5jb2RlZEtleSA9IGVuY29kZVVSSUNvbXBvbmVudChwcm9wZXJ0eSk7XG4gICAgICB2YXIgZW5jb2RlZFZhbHVlID0gZW5jb2RlVVJJQ29tcG9uZW50KGRldGFpbHNbcHJvcGVydHldKTtcbiAgICAgIGZvcm1Cb2R5LnB1c2goZW5jb2RlZEtleSArIFwiPVwiICsgZW5jb2RlZFZhbHVlKTtcbiAgICB9XG4gICAgZm9ybUJvZHkgPSBmb3JtQm9keS5qb2luKFwiJlwiKTtcblxuICAgIGF3YWl0IGZldGNoKFwiaHR0cDovL2xvY2FsaG9zdDo0MDAwL2FwaS9tYW5hamVtZW5fb3JnYW5pc2FzaS9zZXNzaW9ucy9sb2dpblwiLCB7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBBY2NlcHQ6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IGZvcm1Cb2R5LFxuICAgIH0pXG4gICAgICAudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLmpzb24oKSlcbiAgICAgIC50aGVuKGFzeW5jIChyZXNwb25zZUpzb24pID0+IHtcbiAgICAgICAgaWYgKHJlc3BvbnNlSnNvbi5tZXRhZGF0YS5odHRwX2NvZGUgPT0gXCIyMDBcIikge1xuICAgICAgICAgIGF1dGhlbnRpY2F0ZWQuc2V0KHJlc3BvbnNlSnNvbi5kYXRhLmFjY2Vzc190b2tlbik7XG4gICAgICAgICAgYXdhaXQgZ290byhcIi9cIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYWxlcnQoXCJlbWFpbCBhdGF1IHBhc3N3b3JkIHNhbGFoXCIpO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgIH0pO1xuICB9O1xuPC9zY3JpcHQ+XG5cbjxkaXYgY2xhc3M9XCJjb250ZW50XCI+XG4gIDxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cbiAgICA8ZGl2IGNsYXNzPVwicm93XCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sLW1kLTZcIj5cbiAgICAgICAgPGltZyBzcmM9XCJ1bmRyYXdfcmVtb3RlbHlfMmo2eS5zdmdcIiBhbHQ9XCJBdmF0YXJcIiBjbGFzcz1cImltZy1mbHVpZFwiIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjb2wtbWQtNiBjb250ZW50c1wiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwicm93IGp1c3RpZnktY29udGVudC1jZW50ZXJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLW1kLThcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtYi00XCI+XG4gICAgICAgICAgICAgIDxoMz5TaWduIEluPC9oMz5cbiAgICAgICAgICAgICAgPHAgY2xhc3M9XCJtYi00XCI+XG4gICAgICAgICAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQgZWxpdC4gU2FwaWVudGUgc2l0IGF1dCBlb3NcbiAgICAgICAgICAgICAgICBjb25zZWN0ZXR1ciBhZGlwaXNpY2luZy5cbiAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8Zm9ybSBvbjpzdWJtaXR8cHJldmVudERlZmF1bHQ9e3N1Ym1pdH0+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwIGZpcnN0XCI+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cInVzZXJuYW1lXCI+RW1haWw8L2xhYmVsPlxuICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgICAgICAgaWQ9XCJ1c2VybmFtZVwiXG4gICAgICAgICAgICAgICAgICBiaW5kOnZhbHVlPXtlbWFpbH1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgbGFzdCBtYi00XCI+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cInBhc3N3b3JkXCI+UGFzc3dvcmQ8L2xhYmVsPlxuICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgdHlwZT1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgICAgIGlkPVwicGFzc3dvcmRcIlxuICAgICAgICAgICAgICAgICAgYmluZDp2YWx1ZT17cGFzc3dvcmR9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgdHlwZT1cInN1Ym1pdFwiXG4gICAgICAgICAgICAgICAgdmFsdWU9XCJMb2cgSW5cIlxuICAgICAgICAgICAgICAgIGNsYXNzPVwiYnRuIGJ0bi1ibG9jayBidG4tcHJpbWFyeVwiXG4gICAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJkLWJsb2NrIHRleHQtbGVmdCBteS00IHRleHQtbXV0ZWQgdGV4dC1jZW50ZXJcIlxuICAgICAgICAgICAgICAgID4mbWRhc2g7IEJlbHVtIFB1bnlhIEFrdW4/IDxhIGhyZWY9XCIvcmVnaXN0ZXJcIiBzdHlsZT1cInRleHQtZGVjb3JhdGlvbjogbm9uZTtcIj5SZWdpc3RyYXNpPC9hPiAmbWRhc2g7PC9zcGFuXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgIDwvZm9ybT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2FBc0RrQixTQUFPOzs7YUFDSyxpR0FHaEI7Ozs7O2FBSXdCLE9BQUs7Ozs7OzthQVNMLFVBQVE7Ozs7Ozs7Y0FnQjdCLHNCQUEwQjs7Y0FBbUQsWUFBVTtjQUFJLElBQVE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7NkJBakNsRyxTQUFPOzs7Ozs0QkFDSyxpR0FHaEI7Ozs7Ozs7Ozs7aUNBSXdCLE9BQUs7Ozs7Ozs7Ozs7aUNBU0wsVUFBUTs7Ozs7Ozs7OztnQ0FnQjdCLHNCQUEwQjs7OzZCQUFtRCxZQUFVOztnQ0FBSSxJQUFROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0EzQ3BILG9CQW1ETTtHQWxESixvQkFpRE07R0FoREosb0JBK0NNO0dBOUNKLG9CQUVNO0dBREosb0JBQXFFOztHQUV2RSxvQkEwQ007R0F6Q0osb0JBd0NNO0dBdkNKLG9CQXNDTTtHQXJDSixvQkFNTTtHQUxKLG9CQUFnQjs7O0dBQ2hCLG9CQUdJOzs7R0FFTixvQkE2Qk87R0E1Qkwsb0JBUU07R0FQSixvQkFBbUM7OztHQUNuQyxvQkFLRTtxQ0FEWSxHQUFLOztHQUdyQixvQkFRTTtHQVBKLG9CQUFzQzs7O0dBQ3RDLG9CQUtFO3dDQURZLEdBQVE7O0dBSXhCLG9CQUlFOztHQUVGLG9CQUVDOztHQUQ0QixvQkFBaUU7Ozs7Ozs7OzJEQTNCaEUsR0FBTTs7Ozs7Ozt5REFPcEIsR0FBSztzQ0FBTCxHQUFLOzs7K0RBU0wsR0FBUTt5Q0FBUixHQUFROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQXhFaEMsS0FBSyxHQUFHLEVBQUUsRUFDWixRQUFRLEdBQUcsRUFBRTs7T0FFVCxNQUFNO01BQ04sT0FBTyxLQUNULEtBQUssRUFDTCxRQUFRO01BR04sUUFBUTs7V0FDSCxRQUFRLElBQUksT0FBTztPQUN0QixVQUFVLEdBQUcsa0JBQWtCLENBQUMsUUFBUTtPQUN4QyxZQUFZLEdBQUcsa0JBQWtCLENBQUMsT0FBTyxDQUFDLFFBQVE7R0FDdEQsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLEdBQUcsR0FBRyxHQUFHLFlBQVk7OztFQUUvQyxRQUFRLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHOztRQUV0QixLQUFLLENBQUMsK0RBQStEO0dBQ3pFLE1BQU0sRUFBRSxNQUFNO0dBQ2QsT0FBTztJQUNMLE1BQU0sRUFBRSxrQkFBa0I7SUFDMUIsY0FBYyxFQUFFLG1DQUFtQzs7R0FFckQsSUFBSSxFQUFFLFFBQVE7S0FFYixJQUFJLENBQUUsUUFBUSxJQUFLLFFBQVEsQ0FBQyxJQUFJLElBQ2hDLElBQUksT0FBUSxZQUFZO09BQ25CLFlBQVksQ0FBQyxRQUFRLENBQUMsU0FBUyxJQUFJLEtBQUs7SUFDMUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFlBQVk7VUFDMUMsSUFBSSxDQUFDLEdBQUc7O0lBRWQsS0FBSyxDQUFDLDJCQUEyQjs7S0FHcEMsS0FBSyxDQUFFLEtBQUs7R0FDWCxPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUs7Ozs7Ozs7Ozs7O0VBNEJHLEtBQUs7Ozs7O0VBU0wsUUFBUTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
